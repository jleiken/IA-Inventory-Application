package learn;
import java.awt.Color;
import java.awt.Point;
import java.net.URL;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class EditPane extends javax.swing.JFrame 
{

    private int currIndex;
    private ArrayList<Item> myInv;

    public EditPane(ArrayList<Item> inv, Point loc) 
    {
        initComponents();
        setLocation(loc);
        myInv = inv;
        currIndex = 0;
        for(Item item : myInv)
            itemChooser.addItem(item.getName() + " at " + item.getLoc());
        URL imageURL =  getClass().getResource("apple.png");
        ImageIcon img = new ImageIcon(imageURL);
        setIconImage(img.getImage());
    }

    /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        itemChooser = new javax.swing.JComboBox();
        locationField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        quantitySpinner = new javax.swing.JSpinner();
        colorPicker = new javax.swing.JColorChooser();
        doneButton = new javax.swing.JButton();
        nameLabel = new javax.swing.JLabel();
        quantLabel = new javax.swing.JLabel();
        locLabel = new javax.swing.JLabel();
        colorCheck = new javax.swing.JCheckBox();
        colorLabel = new javax.swing.JLabel();
        chooserLabel = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        directionLabel = new javax.swing.JLabel();
        removeButton = new javax.swing.JButton();
        confirmLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Items");
        setResizable(false);

        itemChooser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose an Item" }));
        itemChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemChooserActionPerformed(evt);
            }
        });

        colorPicker.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        doneButton.setText("Done");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        nameLabel.setText("Name");

        quantLabel.setText("Quantity");

        locLabel.setText("Location");

        colorCheck.setText("Colored Item? (y/n)");

        colorLabel.setText("Color");

        chooserLabel.setText("Choose an item and THEN modify the following fields");

        updateButton.setText("Update Current Item");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        directionLabel.setText("(press update current if you want to update more items, done if this is the last edit)");

        removeButton.setText("Remove this Item");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        confirmLabel.setText("Be sure before you press this button");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(doneButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateButton))
                    .addComponent(colorPicker, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(colorLabel)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(itemChooser, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(18, 18, 18)
                            .addComponent(chooserLabel))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(nameLabel))
                            .addGap(43, 43, 43)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(quantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(quantLabel))
                            .addGap(38, 38, 38)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(locLabel)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(locationField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(colorCheck)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(removeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(confirmLabel))
                    .addComponent(directionLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooserLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeButton)
                    .addComponent(confirmLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(quantLabel)
                    .addComponent(locLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(colorCheck))
                .addGap(3, 3, 3)
                .addComponent(colorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(colorPicker, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doneButton)
                    .addComponent(updateButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(directionLabel))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        boolean myBool;
        if(currIndex > -1)
            myBool = update();
        else
            myBool = true;
        if(myBool)
        {
            MainPane.clean(myInv);
            setVisible(false);
            dispose();
        }
    }//GEN-LAST:event_doneButtonActionPerformed

    /**
     * If you change the item, update. GUI method
     * @param evt 
     */
    private void itemChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemChooserActionPerformed
        if(itemChooser.getItemAt(itemChooser.getSelectedIndex()) != null && itemChooser.getItemAt(itemChooser.getSelectedIndex()).equals("Choose an Item"))
        {
            setCleared();
            return;
        }
        currIndex = itemChooser.getSelectedIndex()-1;
        Item currItem = null;
        if(currIndex >= 0)
            currItem = myInv.get(currIndex);
        if(currItem != null && currItem instanceof ColoredItem)
        {
            colorPicker.setColor(((ColoredItem)currItem).getColor());
            colorCheck.setSelected(true);
            nameField.setText(currItem.getName());
            quantitySpinner.setValue((Integer)currItem.getQuantity());
            locationField.setText(currItem.getLoc());
            itemChooser.setSelectedIndex(currIndex);
        }
        if(currItem != null && !(currItem instanceof ColoredItem))
        {
            colorPicker.setColor(Color.WHITE);
            colorCheck.setSelected(false);
            nameField.setText(currItem.getName());
            quantitySpinner.setValue((Integer)currItem.getQuantity());
            locationField.setText(currItem.getLoc());
            itemChooser.setSelectedIndex(currIndex);
        }
        itemChooser.setSelectedIndex(currIndex+1);
    }//GEN-LAST:event_itemChooserActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        if(currIndex > -1)
        {
            if(update())
            {
                currIndex = -1;
                itemChooser.removeAllItems();
                itemChooser.addItem("Choose an Item");
                for(int i = 0; i < myInv.size(); i++)
                    itemChooser.addItem(myInv.get(i).getName() + " at " + myInv.get(i).getLoc());
            }
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        if(!itemChooser.getItemAt(itemChooser.getSelectedIndex()).equals("Choose an Item"))
        {
            setCleared();
            myInv.remove(currIndex);
            itemChooser.removeAllItems();
            itemChooser.addItem("Choose an Item");
            for(int i = 0; i < myInv.size(); i++)
                itemChooser.addItem(myInv.get(i).getName() + " at " + myInv.get(i).getLoc());
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    /**
     * Updates the selected item
     */
    private boolean update()
    {
        //Checks for valid info
        String name = nameField.getText().trim();
        int quantity = (Integer)quantitySpinner.getValue();
        String loc = locationField.getText().trim();
        if(name == null || name.equals("") || loc == null || loc.equals("") || quantity <1 || !MainPane.noBannedVals(name,loc))
        {
            
            JOptionPane.showMessageDialog(directionLabel, "Enter valid information-numbers greater than 0,\n"
                                                         +"And words not including #,@,& or :");
            return false;
        }
        //Sets the item
        Item currItem = myInv.get(currIndex);
        if(currItem instanceof ColoredItem)
        {
            if(!colorCheck.isSelected())
                ((ColoredItem)currItem).setColor(null);
            else
                ((ColoredItem)currItem).setColor(colorPicker.getColor());
        }
        currItem.setName(name);
        currItem.setQuantity(quantity);
        currItem.setLoc(loc);
        if(!(currItem instanceof ColoredItem) && colorCheck.isSelected())
            myInv.set(currIndex, new ColoredItem(currItem.getName(), currItem.getQuantity(), currItem.getLoc(), colorPicker.getColor()));
        MainPane.clean(myInv);
        return true;
    }
    
    /**
     * Wipes the screen.
     */
    private void setCleared()
    {
        colorCheck.setSelected(false);
        nameField.setText(null);
        quantitySpinner.setValue(0);
        locationField.setText(null);
        if(!itemChooser.getItemAt(itemChooser.getSelectedIndex()).equals("Choose an Item"))
        {
            itemChooser.setSelectedIndex(0);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel chooserLabel;
    private javax.swing.JCheckBox colorCheck;
    private javax.swing.JLabel colorLabel;
    private javax.swing.JColorChooser colorPicker;
    private javax.swing.JLabel confirmLabel;
    private javax.swing.JLabel directionLabel;
    private javax.swing.JButton doneButton;
    private javax.swing.JComboBox itemChooser;
    private javax.swing.JLabel locLabel;
    private javax.swing.JTextField locationField;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel quantLabel;
    private javax.swing.JSpinner quantitySpinner;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
