package learn;

import java.awt.Point;
import java.net.URL;
import java.util.ArrayList;
import javax.swing.ImageIcon;

public class NewListItems extends javax.swing.JFrame 
{

    private final ArrayList<String> myArr;
    
    public NewListItems(ArrayList<String> arr, Point loc) 
    {
        initComponents();
        setLocation(loc);
        myArr = arr;
        showItems();
        editorPane.setContentType("text/html");
        URL imageURL =  getClass().getResource("apple.png");
        ImageIcon img = new ImageIcon(imageURL);
        setIconImage(img.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        editorPane = new javax.swing.JEditorPane();
        doneButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Items");

        editorPane.setBackground(new java.awt.Color(240, 240, 240));
        editorPane.setBorder(null);
        editorPane.setContentType("text/html"); // NOI18N
        editorPane.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        editorPane.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        editorPane.setFocusCycleRoot(false);
        editorPane.setFocusable(false);
        editorPane.setHighlighter(null);
        editorPane.setSelectionColor(new java.awt.Color(255, 255, 255));
        editorPane.setVerifyInputWhenFocusTarget(false);
        jScrollPane1.setViewportView(editorPane);
        editorPane.getAccessibleContext().setAccessibleName("");

        doneButton.setText("Done");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(doneButton))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                .addGap(6, 6, 6)
                .addComponent(doneButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_doneButtonActionPerformed

    /**
     * Turns the inventory into HTML text to display properly. Then sets the
     * editorPane to show the changes.
     */
    private void showItems()
    {
        String bigStr = "";
        for(String str : myArr)
        {
            //Format it nicely
            str = str.replaceAll("#","");
            str = str.replaceAll("@","at");
            str = str.replaceAll("&","of");
            //If there's a color
            if(!str.contains("["))
            {
                bigStr += "<p>" + str + "</p>";
            }
            else
            {
                //If there's a color, find it and store it;
                String tempStr = "<p>" + str.substring(0, str.indexOf(":")+1) + "</p>";
                bigStr += tempStr;
                str = str.substring(str.indexOf(":")+1);
                int r = 0;
                int g = 0;
                int b = 0;
                int index = 1;
                while(index <= 3)
                {
                    int holder = 0;
                    char curr = str.charAt(str.indexOf("=")+1);
                    int corrIndex = str.indexOf("=")+1;
                    while((int)curr >= 48 && (int)curr <= 57)
                    {
                        holder *= 10;
                        holder += Integer.parseInt(""+curr);
                        corrIndex++;
                        curr = str.charAt(corrIndex);
                    }
                    if(index ==1)
                        r = holder;
                    else if(index ==2)
                        g = holder;
                    else
                        b = holder;
                    index++;
                    corrIndex--;
                    str = str.substring(corrIndex);
                }
                //Create a long HTML string with a block in the correct color
                bigStr += "<p style='color:rgb("+ r +","+ g +","+ b +")'>██</p>";
            }
        }
        if(bigStr.equals(""))
            bigStr = "<p>Inventory is empty</p>";
        //Set the whole pane as an HTML document
        editorPane.setText("<!DOCTYPE html><html>" + bigStr + "</html>");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton doneButton;
    private javax.swing.JEditorPane editorPane;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
